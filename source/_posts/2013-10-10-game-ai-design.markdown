---
layout: post
title: "游戏AI框架设计"
date: 2013-10-10 11:11
comments: true
categories: 
---

###概述

针对当前新的怪物AI需求，简化怪物AI脚本编写，提高怪物AI运行效率，抽象出AI框架结构，增强框架的灵活性及扩展性，同时能够让设计人员快速的开发怪物AI。

###需求

相对之前的怪物AI，当前新怪物AI相对比较简单，主要是由移动、攻击等基本行为组成的。

###AI实现方式

游戏中怪物AI的现有设计方法主要有：

1. 直接编码，或者给每个特定的怪物挂特定的脚本，当前我们游戏中很大一部分就是这样实现的；
2. 有限状态机(FSM)， 怪物在若干个状态中根据游戏世界中产生的特定事件产生特定的游戏行为，同时怪物进入新的状态；
3. 行为树(Behavior Tree)，怪物AI由若干个类型节点组成的树形结构，每个节点含有前置条件，当前置条件满足时执行该节点；

由于直接给每个怪物挂脚本的形式对于AI开发人员来说工作量繁琐，并且容易造成重复性劳动，下面主要阐述下有限状态机及行为树。

####有限状态机

有限状态机（finite-state machine， 缩写： FSM）又称有限状态自动机，简称状态机，是表示有限个状态以及在这些状态之间的转移和动作等行为的数学模型，一个有限状态机可以用一个关系式描述:

    State(S) x Event(E) -> Action(A), State(NS)

这些关系解析如下：如果我们处于状态S并且事件E发生了，那么我们需要执行动作A，并且状态转换为NS。

当前游戏中怪物AI很大部分是基于FSM实现的，例如一个巡逻小怪的AI可以表示为:

![FSM](/images/game-ai-design/fsm.png)

####行为树


###实现


###脚本集成


###编辑器


###AI调试



